//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/Interaction/Input/Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Input : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Input()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input"",
    ""maps"": [
        {
            ""name"": ""VRiskExperienceInputMap"",
            ""id"": ""5e1e67e7-5ece-4866-91f1-ed181fb0a924"",
            ""actions"": [
                {
                    ""name"": ""Move(Key/Stick)"",
                    ""type"": ""Value"",
                    ""id"": ""da85b0a9-3f2f-42a7-a561-54dbc31626eb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move(Left_Hand)"",
                    ""type"": ""Value"",
                    ""id"": ""bf24ebfe-6159-49ae-a9a2-7719e326feee"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move(Right_Hand)"",
                    ""type"": ""Value"",
                    ""id"": ""e4e8096c-7042-41c0-8d61-78d43282b789"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateView"",
                    ""type"": ""Value"",
                    ""id"": ""525df89a-6a02-4f38-bf2b-696098166f5d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HeadMoved"",
                    ""type"": ""Value"",
                    ""id"": ""e30677f2-09ef-42b5-959a-31e3d1211ce0"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Debug"",
                    ""type"": ""Button"",
                    ""id"": ""5e7f13b5-9339-49a7-9553-3cd787378f81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact(Left_Hand)"",
                    ""type"": ""Button"",
                    ""id"": ""8dbb3863-f493-4af7-9b96-99da8e8f4315"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact(Right_Hand)"",
                    ""type"": ""Button"",
                    ""id"": ""07356140-ef73-4426-adae-0aef22a57434"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch(Left_Hand)"",
                    ""type"": ""Button"",
                    ""id"": ""c6deae18-875d-402d-a75c-d2be2d4171a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch(Right_Hand)"",
                    ""type"": ""Button"",
                    ""id"": ""4d79b605-be3a-4ee2-8002-5bc83cef75e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ef4953eb-a8b8-4e08-9175-9188d2ca7d20"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Key/Stick)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3515ffd1-20b0-43c9-a3a7-a45223967b97"",
                    ""path"": ""<XRController>{LeftHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Key/Stick)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""cd144505-980c-42b6-a914-0c0283407e3f"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Key/Stick)"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bdd9e0a5-0e24-489d-9d43-c3c788acde77"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Key/Stick)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1c396b30-00a6-40b8-8660-7e97a9eb6bd5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Key/Stick)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5b3ac1e7-7a4e-4f2e-92ae-f43fed9c5947"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Key/Stick)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2311dceb-df13-4b76-8788-e0bdb0f736e7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Key/Stick)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""66f06ed1-08fa-48dd-9677-fe49dbbde511"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Left_Hand)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8d4ed35-5abc-4e4f-afcf-3d99fc818823"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move(Right_Hand)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard [Arrows]"",
                    ""id"": ""c1aadacd-a12e-417a-a1fa-3776071b7576"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateView"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""98151641-72db-4efa-8b4c-8a3663cec05d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b8df71b8-f720-4d3d-8478-42e5ad1bfdbe"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a2d04f24-af27-4553-9d62-adef606c7177"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0368fcfc-e360-4999-9f3a-45dc0ce54d31"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b81e212f-80b1-4eb7-a8f8-c64025cbf7b5"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0a25883-ef0c-480b-b22a-6a8625fc1e5f"",
                    ""path"": ""<XRController>{RightHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48dcd8b4-c2b4-4739-80c9-d0c3ef6f16e0"",
                    ""path"": ""<XRHMD>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeadMoved"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efd7be45-5109-4a9c-b65b-b84960c8b3a4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Debug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83857e8e-2fdc-4c1c-be32-0e03691b8891"",
                    ""path"": ""<XRController>{LeftHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact(Left_Hand)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c378046f-92be-4944-81a0-faffdac55c42"",
                    ""path"": ""<XRController>{RightHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact(Right_Hand)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abd17c11-bf8e-4504-9020-5e3bbf9f257c"",
                    ""path"": ""<XRController>{LeftHand}/triggerTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch(Left_Hand)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""089ceac8-ec0c-400b-843a-3139a102c1dd"",
                    ""path"": ""<XRController>{RightHand}/triggerTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch(Right_Hand)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DataVisualiserInputMap"",
            ""id"": ""da215fe0-8952-4317-9cf5-5e41762ffb9f"",
            ""actions"": [
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""Value"",
                    ""id"": ""591ea2ed-c2fb-4fd3-8bfb-25e52df5882a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PanView"",
                    ""type"": ""Button"",
                    ""id"": ""e3f65a64-e730-4151-90ae-2d8275e22281"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomView"",
                    ""type"": ""Value"",
                    ""id"": ""73da6d99-8561-4f5d-be02-ee7e7d45ddcb"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateView"",
                    ""type"": ""Button"",
                    ""id"": ""b3081131-9581-46e7-a981-c2fd3ee2a058"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveView"",
                    ""type"": ""Value"",
                    ""id"": ""50473440-9c14-4366-a0d7-87b4682bc1cc"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FasterMovement"",
                    ""type"": ""Button"",
                    ""id"": ""f160da04-e9c6-4cb2-8b64-070d264ebe72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""24f9e479-4653-4feb-93cd-c2e912c29653"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PanView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1cfea72-9842-4e44-b46f-c26b2ec8d6d0"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""972d160f-b638-4395-840f-ae9a817b25a7"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""669db0d3-0ed6-4630-9ead-a8ea6ddc4a2c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""513e0d4f-e143-4dfb-84e3-fb98360cd569"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveView"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""beda9c00-ef96-4a01-991f-d03098c43ed6"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e0511efd-b57a-4aa3-ac85-019a6f631c48"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e1278629-4377-477c-8116-78afd456357a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5877a52d-e94c-484f-87b7-5155a17aec48"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""c14e042f-4084-4257-a02e-a5154799320d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""e36701d0-db88-44aa-985c-d35f40e62248"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bb2c1f38-e789-4747-8d23-317bc055becb"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FasterMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // VRiskExperienceInputMap
        m_VRiskExperienceInputMap = asset.FindActionMap("VRiskExperienceInputMap", throwIfNotFound: true);
        m_VRiskExperienceInputMap_MoveKeyStick = m_VRiskExperienceInputMap.FindAction("Move(Key/Stick)", throwIfNotFound: true);
        m_VRiskExperienceInputMap_MoveLeft_Hand = m_VRiskExperienceInputMap.FindAction("Move(Left_Hand)", throwIfNotFound: true);
        m_VRiskExperienceInputMap_MoveRight_Hand = m_VRiskExperienceInputMap.FindAction("Move(Right_Hand)", throwIfNotFound: true);
        m_VRiskExperienceInputMap_RotateView = m_VRiskExperienceInputMap.FindAction("RotateView", throwIfNotFound: true);
        m_VRiskExperienceInputMap_HeadMoved = m_VRiskExperienceInputMap.FindAction("HeadMoved", throwIfNotFound: true);
        m_VRiskExperienceInputMap_Debug = m_VRiskExperienceInputMap.FindAction("Debug", throwIfNotFound: true);
        m_VRiskExperienceInputMap_InteractLeft_Hand = m_VRiskExperienceInputMap.FindAction("Interact(Left_Hand)", throwIfNotFound: true);
        m_VRiskExperienceInputMap_InteractRight_Hand = m_VRiskExperienceInputMap.FindAction("Interact(Right_Hand)", throwIfNotFound: true);
        m_VRiskExperienceInputMap_TouchLeft_Hand = m_VRiskExperienceInputMap.FindAction("Touch(Left_Hand)", throwIfNotFound: true);
        m_VRiskExperienceInputMap_TouchRight_Hand = m_VRiskExperienceInputMap.FindAction("Touch(Right_Hand)", throwIfNotFound: true);
        // DataVisualiserInputMap
        m_DataVisualiserInputMap = asset.FindActionMap("DataVisualiserInputMap", throwIfNotFound: true);
        m_DataVisualiserInputMap_MouseDelta = m_DataVisualiserInputMap.FindAction("MouseDelta", throwIfNotFound: true);
        m_DataVisualiserInputMap_PanView = m_DataVisualiserInputMap.FindAction("PanView", throwIfNotFound: true);
        m_DataVisualiserInputMap_ZoomView = m_DataVisualiserInputMap.FindAction("ZoomView", throwIfNotFound: true);
        m_DataVisualiserInputMap_RotateView = m_DataVisualiserInputMap.FindAction("RotateView", throwIfNotFound: true);
        m_DataVisualiserInputMap_MoveView = m_DataVisualiserInputMap.FindAction("MoveView", throwIfNotFound: true);
        m_DataVisualiserInputMap_FasterMovement = m_DataVisualiserInputMap.FindAction("FasterMovement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // VRiskExperienceInputMap
    private readonly InputActionMap m_VRiskExperienceInputMap;
    private IVRiskExperienceInputMapActions m_VRiskExperienceInputMapActionsCallbackInterface;
    private readonly InputAction m_VRiskExperienceInputMap_MoveKeyStick;
    private readonly InputAction m_VRiskExperienceInputMap_MoveLeft_Hand;
    private readonly InputAction m_VRiskExperienceInputMap_MoveRight_Hand;
    private readonly InputAction m_VRiskExperienceInputMap_RotateView;
    private readonly InputAction m_VRiskExperienceInputMap_HeadMoved;
    private readonly InputAction m_VRiskExperienceInputMap_Debug;
    private readonly InputAction m_VRiskExperienceInputMap_InteractLeft_Hand;
    private readonly InputAction m_VRiskExperienceInputMap_InteractRight_Hand;
    private readonly InputAction m_VRiskExperienceInputMap_TouchLeft_Hand;
    private readonly InputAction m_VRiskExperienceInputMap_TouchRight_Hand;
    public struct VRiskExperienceInputMapActions
    {
        private @Input m_Wrapper;
        public VRiskExperienceInputMapActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveKeyStick => m_Wrapper.m_VRiskExperienceInputMap_MoveKeyStick;
        public InputAction @MoveLeft_Hand => m_Wrapper.m_VRiskExperienceInputMap_MoveLeft_Hand;
        public InputAction @MoveRight_Hand => m_Wrapper.m_VRiskExperienceInputMap_MoveRight_Hand;
        public InputAction @RotateView => m_Wrapper.m_VRiskExperienceInputMap_RotateView;
        public InputAction @HeadMoved => m_Wrapper.m_VRiskExperienceInputMap_HeadMoved;
        public InputAction @Debug => m_Wrapper.m_VRiskExperienceInputMap_Debug;
        public InputAction @InteractLeft_Hand => m_Wrapper.m_VRiskExperienceInputMap_InteractLeft_Hand;
        public InputAction @InteractRight_Hand => m_Wrapper.m_VRiskExperienceInputMap_InteractRight_Hand;
        public InputAction @TouchLeft_Hand => m_Wrapper.m_VRiskExperienceInputMap_TouchLeft_Hand;
        public InputAction @TouchRight_Hand => m_Wrapper.m_VRiskExperienceInputMap_TouchRight_Hand;
        public InputActionMap Get() { return m_Wrapper.m_VRiskExperienceInputMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VRiskExperienceInputMapActions set) { return set.Get(); }
        public void SetCallbacks(IVRiskExperienceInputMapActions instance)
        {
            if (m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface != null)
            {
                @MoveKeyStick.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveKeyStick;
                @MoveKeyStick.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveKeyStick;
                @MoveKeyStick.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveKeyStick;
                @MoveLeft_Hand.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveLeft_Hand;
                @MoveLeft_Hand.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveLeft_Hand;
                @MoveLeft_Hand.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveLeft_Hand;
                @MoveRight_Hand.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveRight_Hand;
                @MoveRight_Hand.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveRight_Hand;
                @MoveRight_Hand.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnMoveRight_Hand;
                @RotateView.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnRotateView;
                @RotateView.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnRotateView;
                @RotateView.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnRotateView;
                @HeadMoved.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnHeadMoved;
                @HeadMoved.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnHeadMoved;
                @HeadMoved.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnHeadMoved;
                @Debug.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnDebug;
                @Debug.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnDebug;
                @Debug.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnDebug;
                @InteractLeft_Hand.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnInteractLeft_Hand;
                @InteractLeft_Hand.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnInteractLeft_Hand;
                @InteractLeft_Hand.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnInteractLeft_Hand;
                @InteractRight_Hand.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnInteractRight_Hand;
                @InteractRight_Hand.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnInteractRight_Hand;
                @InteractRight_Hand.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnInteractRight_Hand;
                @TouchLeft_Hand.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnTouchLeft_Hand;
                @TouchLeft_Hand.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnTouchLeft_Hand;
                @TouchLeft_Hand.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnTouchLeft_Hand;
                @TouchRight_Hand.started -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnTouchRight_Hand;
                @TouchRight_Hand.performed -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnTouchRight_Hand;
                @TouchRight_Hand.canceled -= m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface.OnTouchRight_Hand;
            }
            m_Wrapper.m_VRiskExperienceInputMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveKeyStick.started += instance.OnMoveKeyStick;
                @MoveKeyStick.performed += instance.OnMoveKeyStick;
                @MoveKeyStick.canceled += instance.OnMoveKeyStick;
                @MoveLeft_Hand.started += instance.OnMoveLeft_Hand;
                @MoveLeft_Hand.performed += instance.OnMoveLeft_Hand;
                @MoveLeft_Hand.canceled += instance.OnMoveLeft_Hand;
                @MoveRight_Hand.started += instance.OnMoveRight_Hand;
                @MoveRight_Hand.performed += instance.OnMoveRight_Hand;
                @MoveRight_Hand.canceled += instance.OnMoveRight_Hand;
                @RotateView.started += instance.OnRotateView;
                @RotateView.performed += instance.OnRotateView;
                @RotateView.canceled += instance.OnRotateView;
                @HeadMoved.started += instance.OnHeadMoved;
                @HeadMoved.performed += instance.OnHeadMoved;
                @HeadMoved.canceled += instance.OnHeadMoved;
                @Debug.started += instance.OnDebug;
                @Debug.performed += instance.OnDebug;
                @Debug.canceled += instance.OnDebug;
                @InteractLeft_Hand.started += instance.OnInteractLeft_Hand;
                @InteractLeft_Hand.performed += instance.OnInteractLeft_Hand;
                @InteractLeft_Hand.canceled += instance.OnInteractLeft_Hand;
                @InteractRight_Hand.started += instance.OnInteractRight_Hand;
                @InteractRight_Hand.performed += instance.OnInteractRight_Hand;
                @InteractRight_Hand.canceled += instance.OnInteractRight_Hand;
                @TouchLeft_Hand.started += instance.OnTouchLeft_Hand;
                @TouchLeft_Hand.performed += instance.OnTouchLeft_Hand;
                @TouchLeft_Hand.canceled += instance.OnTouchLeft_Hand;
                @TouchRight_Hand.started += instance.OnTouchRight_Hand;
                @TouchRight_Hand.performed += instance.OnTouchRight_Hand;
                @TouchRight_Hand.canceled += instance.OnTouchRight_Hand;
            }
        }
    }
    public VRiskExperienceInputMapActions @VRiskExperienceInputMap => new VRiskExperienceInputMapActions(this);

    // DataVisualiserInputMap
    private readonly InputActionMap m_DataVisualiserInputMap;
    private IDataVisualiserInputMapActions m_DataVisualiserInputMapActionsCallbackInterface;
    private readonly InputAction m_DataVisualiserInputMap_MouseDelta;
    private readonly InputAction m_DataVisualiserInputMap_PanView;
    private readonly InputAction m_DataVisualiserInputMap_ZoomView;
    private readonly InputAction m_DataVisualiserInputMap_RotateView;
    private readonly InputAction m_DataVisualiserInputMap_MoveView;
    private readonly InputAction m_DataVisualiserInputMap_FasterMovement;
    public struct DataVisualiserInputMapActions
    {
        private @Input m_Wrapper;
        public DataVisualiserInputMapActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseDelta => m_Wrapper.m_DataVisualiserInputMap_MouseDelta;
        public InputAction @PanView => m_Wrapper.m_DataVisualiserInputMap_PanView;
        public InputAction @ZoomView => m_Wrapper.m_DataVisualiserInputMap_ZoomView;
        public InputAction @RotateView => m_Wrapper.m_DataVisualiserInputMap_RotateView;
        public InputAction @MoveView => m_Wrapper.m_DataVisualiserInputMap_MoveView;
        public InputAction @FasterMovement => m_Wrapper.m_DataVisualiserInputMap_FasterMovement;
        public InputActionMap Get() { return m_Wrapper.m_DataVisualiserInputMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DataVisualiserInputMapActions set) { return set.Get(); }
        public void SetCallbacks(IDataVisualiserInputMapActions instance)
        {
            if (m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface != null)
            {
                @MouseDelta.started -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.performed -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.canceled -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnMouseDelta;
                @PanView.started -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnPanView;
                @PanView.performed -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnPanView;
                @PanView.canceled -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnPanView;
                @ZoomView.started -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnZoomView;
                @ZoomView.performed -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnZoomView;
                @ZoomView.canceled -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnZoomView;
                @RotateView.started -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnRotateView;
                @RotateView.performed -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnRotateView;
                @RotateView.canceled -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnRotateView;
                @MoveView.started -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnMoveView;
                @MoveView.performed -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnMoveView;
                @MoveView.canceled -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnMoveView;
                @FasterMovement.started -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnFasterMovement;
                @FasterMovement.performed -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnFasterMovement;
                @FasterMovement.canceled -= m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface.OnFasterMovement;
            }
            m_Wrapper.m_DataVisualiserInputMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MouseDelta.started += instance.OnMouseDelta;
                @MouseDelta.performed += instance.OnMouseDelta;
                @MouseDelta.canceled += instance.OnMouseDelta;
                @PanView.started += instance.OnPanView;
                @PanView.performed += instance.OnPanView;
                @PanView.canceled += instance.OnPanView;
                @ZoomView.started += instance.OnZoomView;
                @ZoomView.performed += instance.OnZoomView;
                @ZoomView.canceled += instance.OnZoomView;
                @RotateView.started += instance.OnRotateView;
                @RotateView.performed += instance.OnRotateView;
                @RotateView.canceled += instance.OnRotateView;
                @MoveView.started += instance.OnMoveView;
                @MoveView.performed += instance.OnMoveView;
                @MoveView.canceled += instance.OnMoveView;
                @FasterMovement.started += instance.OnFasterMovement;
                @FasterMovement.performed += instance.OnFasterMovement;
                @FasterMovement.canceled += instance.OnFasterMovement;
            }
        }
    }
    public DataVisualiserInputMapActions @DataVisualiserInputMap => new DataVisualiserInputMapActions(this);
    public interface IVRiskExperienceInputMapActions
    {
        void OnMoveKeyStick(InputAction.CallbackContext context);
        void OnMoveLeft_Hand(InputAction.CallbackContext context);
        void OnMoveRight_Hand(InputAction.CallbackContext context);
        void OnRotateView(InputAction.CallbackContext context);
        void OnHeadMoved(InputAction.CallbackContext context);
        void OnDebug(InputAction.CallbackContext context);
        void OnInteractLeft_Hand(InputAction.CallbackContext context);
        void OnInteractRight_Hand(InputAction.CallbackContext context);
        void OnTouchLeft_Hand(InputAction.CallbackContext context);
        void OnTouchRight_Hand(InputAction.CallbackContext context);
    }
    public interface IDataVisualiserInputMapActions
    {
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnPanView(InputAction.CallbackContext context);
        void OnZoomView(InputAction.CallbackContext context);
        void OnRotateView(InputAction.CallbackContext context);
        void OnMoveView(InputAction.CallbackContext context);
        void OnFasterMovement(InputAction.CallbackContext context);
    }
}
